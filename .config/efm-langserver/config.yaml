version: 2
tools:
  golint: &golint
    lint-command: "golint ${INPUT} | sed 's/^/h:/'"
    lint-ignore-exit-code: true
    lint-formats:
      - '%t:%f:%l:%c:%m'

  vint: &vint
    lint-command: 'vint -'
    lint-stdin: true

  textlint: &textlint
    lint-command: 'yarn run textlint --format unix --stdin --stdin-filename ${INPUT}'
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m [%trror/%r]'
      - '%f:%l:%c: 【%r】 %m'
      - '%E%f:%l:%c: %m'
      - '%Z%m [%trror/%r]'
      - '%C%m'
    root-markers:
      - .textlintrc
    commands:
      - command: 'yarn run textlint --fix ${INPUT}'
        title: 'textlint fix'

  python-flake8: &python-tox-flake8
    lint-command: 'flake8 -c tox.ini --stdin-display-name ${INPUT} -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'
    # root-markers:
    #   - tox.ini

  python-yapf: &python-yapf
    format-command: 'poetry run yapf --quiet --style="{based_on_style: pep8, column_limit: 160}"'
    format-stdin: true

  sh-shellcheck: &sh-shellcheck
    lint-command: 'shellcheck -f gcc -x'
    lint-source: 'shellcheck'
    lint-formats:
      - '%f:%l:%c: %trror: %m'
      - '%f:%l:%c: %tarning: %m'
      - '%f:%l:%c: %tote: %m'

  rego: &rego
    format-command: opa fmt
    format-stdin: true

languages:
  go:
    - <<: *golint

  vim:
    - <<: *vint

  tex:
    - <<: *textlint

  plaintex:
    - <<: *textlint

  markdown:
    - <<: *textlint

  python:
    - <<: *python-tox-flake8
    - <<: *python-yapf

  sh:
    - <<: *sh-shellcheck

  review:
    - <<: *textlint

  rego:
    - <<: *rego
